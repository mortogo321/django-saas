name: kalidocs

services:
  api:
    build: ../server
    command: python manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    deploy:
      replicas: 4
    networks:
      - internal
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server/:/app/
      - ../server/static:/app/static
    depends_on:
      - db

  celery:
    container_name: celery
    build: ../server
    command: celery -A base worker -l info
    restart: unless-stopped
    networks:
      - internal
    env_file:
      - ../server/.env.dev
    volumes:
      - ../server/:/app/
      - ../server/static:/app/static
    depends_on:
      - db
      - redis
      - api

  web:
    container_name: web
    build:
      context: ../web
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - internal
    env_file:
      - ../web/.env.dev
    volumes:
      - ../web/:/app/
      - node_modules:/app/node_modules

  db:
    container_name: db
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../server/.env.dev
    networks:
      - internal

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - internal
    volumes:
      - redis_data:/data

  nginx:
    container_name: nginx
    build: ../nginx
    restart: unless-stopped
    ports:
      - 80:80
    networks:
      - internal
    volumes:
      - ../nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ../nginx/nginx.cors.conf:/etc/nginx/cors.conf
      - ../server/static:/app/static
    depends_on:
      - api

networks:
  internal:

volumes:
  node_modules:
  postgres_data:
  redis_data:
